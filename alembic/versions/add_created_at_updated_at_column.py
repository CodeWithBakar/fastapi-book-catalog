"""Add timestamp columns to books

Revision ID: d48a211a75d5
Revises: 61f042278ce9
Create Date: 2025-07-23 01:40:15.123456

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "d48a211a75d5"
down_revision: Union[str, Sequence[str], None] = "61f042278ce9"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Adds created_at and updated_at columns to the books table using a batch operation."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("books", schema=None) as batch_op:
        batch_op.add_column(
            sa.Column(
                "created_at",
                sa.TIMESTAMP(timezone=True),
                server_default=sa.text("(CURRENT_TIMESTAMP)"),
                nullable=False,
            )
        )
        batch_op.add_column(
            sa.Column(
                "updated_at",
                sa.TIMESTAMP(timezone=True),
                server_default=sa.text("(CURRENT_TIMESTAMP)"),
                nullable=False,
            )
        )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Removes created_at and updated_at columns from the books table using a batch operation."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("books", schema=None) as batch_op:
        batch_op.drop_column("updated_at")
        batch_op.drop_column("created_at")
    # ### end Alembic commands ###
